name: Web CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'web/**'
      - '.github/workflows/web.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'web/**'
      - '.github/workflows/web.yml'

env:
  NODE_VERSION: "20"

jobs:
  test:
    name: Test and Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
        
    - name: Install dependencies
      run: |
        cd web
        npm ci
        
    - name: Check code formatting
      run: |
        cd web
        npm run lint
        
    - name: Run unit tests
      run: |
        cd web
        npm run test:coverage
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: web/coverage/lcov.info
        flags: web
        name: web-coverage
        
    - name: Build application
      run: |
        cd web
        npm run build
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: web-build
        path: web/.next/
        retention-days: 7

  e2e:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
        
    - name: Install dependencies
      run: |
        cd web
        npm ci
        
    - name: Install Playwright browsers
      run: |
        cd web
        npx playwright install --with-deps
        
    - name: Run E2E tests
      run: |
        cd web
        npm run test:e2e
        
    - name: Upload Playwright report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: web/playwright-report/
        retention-days: 7

  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
        
    - name: Install dependencies
      run: |
        cd web
        npm ci
        
    - name: Build application
      run: |
        cd web
        npm run build
        
    - name: Start application
      run: |
        cd web
        npm start &
        sleep 30
        
    - name: Run Lighthouse CI
      run: |
        cd web
        npm run test:performance
        
    - name: Upload performance report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lighthouse-report
        path: web/lighthouse-report.html
        retention-days: 7

  accessibility:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
        
    - name: Install dependencies
      run: |
        cd web
        npm ci
        
    - name: Install Playwright browsers
      run: |
        cd web
        npx playwright install --with-deps
        
    - name: Run accessibility tests
      run: |
        cd web
        npm run test:accessibility
        
    - name: Upload accessibility report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: accessibility-report
        path: web/playwright-report/
        retention-days: 7

  mobile:
    name: Mobile Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
        
    - name: Install dependencies
      run: |
        cd web
        npm ci
        
    - name: Install Playwright browsers
      run: |
        cd web
        npx playwright install --with-deps
        
    - name: Run mobile tests
      run: |
        cd web
        npm run test:mobile
        
    - name: Upload mobile test report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: mobile-test-report
        path: web/playwright-report/
        retention-days: 7
