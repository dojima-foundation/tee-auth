name: Web CI/CD

# Web application CI/CD workflow for Next.js frontend
# Triggers on changes to web directory or manual dispatch

on:
  push:
    branches: [main, develop]
    paths:
      - 'web/**'
      - '.github/workflows/web.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'web/**'
      - '.github/workflows/web.yml'
  workflow_dispatch:
    inputs:
      force_run:
        description: 'Force run this workflow'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: "20"

jobs:
  test:
    name: Test and Build
    runs-on: [self-hosted, ovh, ubuntu-22.04]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
        
    - name: Fix system permissions
      run: |
        # Fix temporary file permissions for apt operations
        sudo chmod 1777 /tmp
        
    - name: Install dependencies
      run: |
        cd web
        npm ci
        
    - name: Check code formatting
      run: |
        cd web
        npm run lint
        
    - name: Run unit tests
      run: |
        cd web
        npm run test:coverage
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: web/coverage/lcov.info
        flags: web
        name: web-coverage
        
    - name: Build application
      run: |
        cd web
        npm run build
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: web-build
        path: web/.next/
        retention-days: 7

  e2e:
    name: End-to-End Tests
    runs-on: [self-hosted, ovh, ubuntu-22.04]
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
        
    - name: Fix system permissions
      run: |
        # Fix temporary file permissions for apt operations
        sudo chmod 1777 /tmp
        
    - name: Install dependencies
      run: |
        cd web
        npm ci
        
        
    - name: Clear Playwright cache
      run: |
        # Clear any corrupted Playwright cache
        rm -rf ~/.cache/ms-playwright/ || true
        
    - name: Install Playwright browsers (without deps)
      run: |
        cd web
        npx playwright install
        
    - name: Install Playwright system dependencies manually
      run: |
        # Install system dependencies manually to avoid apt-key issues
        sudo apt-get update || true
        sudo apt-get install -y \
          libnss3 \
          libatk-bridge2.0-0 \
          libdrm2 \
          libxkbcommon0 \
          libgtk-3-0 \
          libgbm1 \
          libasound2 \
          libxss1 \
          libgconf-2-4 \
          libxrandr2 \
          libasound2 \
          libpangocairo-1.0-0 \
          libatk1.0-0 \
          libcairo-gobject2 \
          libgtk-3-0 \
          libgdk-pixbuf2.0-0 \
          gstreamer1.0-wpe \
          libgstreamer-plugins-base1.0-0 \
          libgstreamer-plugins-bad1.0-0
        
    - name: Run E2E tests
      run: |
        cd web
        npm run test:e2e
        
    - name: Upload Playwright report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: web/playwright-report/
        retention-days: 7

  performance:
    name: Performance Tests
    runs-on: [self-hosted, ovh, ubuntu-22.04]
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
        
    - name: Fix system permissions
      run: |
        # Fix temporary file permissions for apt operations
        sudo chmod 1777 /tmp
        
    - name: Install dependencies
      run: |
        cd web
        npm ci
        
    - name: Install Chrome for Lighthouse
      run: |
        # Install Google Chrome
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
        # Verify Chrome installation
        google-chrome --version
        
    - name: Build application
      run: |
        cd web
        npm run build
        
    - name: Start application
      run: |
        cd web
        npm start &
        sleep 30
        
    - name: Run Lighthouse CI
      run: |
        cd web
        npm run test:performance
        
    - name: Upload performance report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lighthouse-report
        path: web/lighthouse-reports/
        retention-days: 7

  accessibility:
    name: Accessibility Tests
    runs-on: [self-hosted, ovh, ubuntu-22.04]
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
        
    - name: Fix system permissions
      run: |
        # Fix temporary file permissions for apt operations
        sudo chmod 1777 /tmp
        
    - name: Install dependencies
      run: |
        cd web
        npm ci
        
        
    - name: Clear Playwright cache
      run: |
        # Clear any corrupted Playwright cache
        rm -rf ~/.cache/ms-playwright/ || true
        
    - name: Install Playwright browsers (without deps)
      run: |
        cd web
        npx playwright install
        
    - name: Install Playwright system dependencies manually
      run: |
        # Install system dependencies manually to avoid apt-key issues
        sudo apt-get update || true
        sudo apt-get install -y \
          libnss3 \
          libatk-bridge2.0-0 \
          libdrm2 \
          libxkbcommon0 \
          libgtk-3-0 \
          libgbm1 \
          libasound2 \
          libxss1 \
          libgconf-2-4 \
          libxrandr2 \
          libasound2 \
          libpangocairo-1.0-0 \
          libatk1.0-0 \
          libcairo-gobject2 \
          libgtk-3-0 \
          libgdk-pixbuf2.0-0 \
          gstreamer1.0-wpe \
          libgstreamer-plugins-base1.0-0 \
          libgstreamer-plugins-bad1.0-0
        
    - name: Verify Playwright installation
      run: |
        cd web
        npx playwright --version
        npx playwright install --dry-run
        
    - name: Verify browser executables
      run: |
        cd web
        # Check if browser executables exist
        ls -la ~/.cache/ms-playwright/ || echo "Playwright cache directory not found"
        find ~/.cache/ms-playwright/ -name "pw_run.sh" 2>/dev/null || echo "No pw_run.sh found"
        
        # List installed browsers
        npx playwright install --dry-run | grep -E "(chromium|firefox|webkit)" || echo "Browser check completed"
        
        # Test WebKit specifically
        npx playwright test --project=webkit --grep="should display home page" --reporter=line || echo "WebKit test failed"
        
    - name: Run accessibility tests
      run: |
        cd web
        npm run test:accessibility:ci
      timeout-minutes: 15
        
    - name: Upload accessibility report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: accessibility-report
        path: web/playwright-report/
        retention-days: 7

  mobile:
    name: Mobile Tests
    runs-on: [self-hosted, ovh, ubuntu-22.04]
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
        
    - name: Fix system permissions
      run: |
        # Fix temporary file permissions for apt operations
        sudo chmod 1777 /tmp
        
    - name: Install dependencies
      run: |
        cd web
        npm ci
        
        
    - name: Clear Playwright cache
      run: |
        # Clear any corrupted Playwright cache
        rm -rf ~/.cache/ms-playwright/ || true
        
    - name: Install Playwright browsers (without deps)
      run: |
        cd web
        npx playwright install
        
    - name: Install Playwright system dependencies manually
      run: |
        # Install system dependencies manually to avoid apt-key issues
        sudo apt-get update || true
        sudo apt-get install -y \
          libnss3 \
          libatk-bridge2.0-0 \
          libdrm2 \
          libxkbcommon0 \
          libgtk-3-0 \
          libgbm1 \
          libasound2 \
          libxss1 \
          libgconf-2-4 \
          libxrandr2 \
          libasound2 \
          libpangocairo-1.0-0 \
          libatk1.0-0 \
          libcairo-gobject2 \
          libgtk-3-0 \
          libgdk-pixbuf2.0-0 \
          gstreamer1.0-wpe \
          libgstreamer-plugins-base1.0-0 \
          libgstreamer-plugins-bad1.0-0
        
    - name: Run mobile tests
      run: |
        cd web
        npm run test:mobile
        
    - name: Upload mobile test report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: mobile-test-report
        path: web/playwright-report/
        retention-days: 7
