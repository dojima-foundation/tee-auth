name: Renclave-v2 CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'renclave-v2/**'
      - '.github/workflows/renclave-v2.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'renclave-v2/**'
      - '.github/workflows/renclave-v2.yml'

env:
  CARGO_TERM_COLOR: always
  RUST_VERSION: "1.82"

jobs:
  test:
    name: Test and Build
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ env.RUST_VERSION }}
        targets: ${{ matrix.target }}
        components: rustfmt, clippy
        
    - name: Cache Rust dependencies
      uses: Swatinem/rust-cache@v2
      with:
        key: renclave-v2-${{ matrix.target }}-${{ hashFiles('renclave-v2/Cargo.lock') }}
        target-dir: renclave-v2/target
        
    - name: Install cargo-tarpaulin
      run: |
        cd renclave-v2
        cargo install cargo-tarpaulin --version 0.26.0
        
    - name: Check code formatting
      run: |
        cd renclave-v2
        cargo fmt --all -- --check
        
    - name: Run clippy
      run: |
        cd renclave-v2
        cargo clippy --workspace -- -D warnings
        
    - name: Run unit tests
      run: |
        cd renclave-v2
        cargo test --workspace --verbose
        
    - name: Run integration tests
      run: |
        cd renclave-v2
        make test-integration
        
    - name: Generate coverage report
      run: |
        cd renclave-v2
        cargo tarpaulin --workspace --out Xml --output-dir coverage
        cargo tarpaulin --workspace --out Html --output-dir coverage
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: renclave-v2/coverage/cobertura.xml
        flags: renclave-v2
        name: renclave-v2-coverage
        
    - name: Build release
      run: |
        cd renclave-v2
        cargo build --release --workspace
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: renclave-v2-build-${{ matrix.target }}
        path: renclave-v2/target/release/
        retention-days: 7

  docker:
    name: Docker Build and Test
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker images
      run: |
        cd renclave-v2
        make docker-build
        
    - name: Run Docker tests
      run: |
        cd renclave-v2
        make test-docker
        
    - name: Clean up Docker
      if: always()
      run: |
        cd renclave-v2
        make docker-clean

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ env.RUST_VERSION }}
        components: rustfmt, clippy
        
    - name: Install cargo-audit
      run: |
        cd renclave-v2
        cargo install cargo-audit
        
    - name: Run security audit
      run: |
        cd renclave-v2
        cargo audit
        
    - name: Run cargo-deny
      run: |
        cd renclave-v2
        cargo install cargo-deny
        cargo deny check
