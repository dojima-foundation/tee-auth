name: Gauth CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'gauth/**'
      - '.github/workflows/gauth.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'gauth/**'
      - '.github/workflows/gauth.yml'

env:
  GO_VERSION: "1.23"
  POSTGRES_VERSION: "15"
  REDIS_VERSION: "7-alpine"

jobs:
  test:
    name: Test and Build
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: gauth
          POSTGRES_DB: gauth_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
        
    - name: Install protoc
      uses: arduino/setup-protoc@v1
      
    - name: Install protoc plugins
      run: |
        cd gauth
        go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
        go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
        
    - name: Install development tools
      run: |
        cd gauth
        go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
        go install golang.org/x/tools/cmd/goimports@latest
        go install github.com/securego/gosec/v2/cmd/gosec@v2.21.4
        
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('gauth/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: Download dependencies
      run: |
        cd gauth
        go mod download
        go mod verify
        
    - name: Generate protobuf code
      run: |
        cd gauth
        make proto
        
    - name: Check code formatting
      run: |
        cd gauth
        make fmt
        
    - name: Run go vet
      run: |
        cd gauth
        make vet
        
    - name: Run linter
      run: |
        cd gauth
        make lint
        
    - name: Run security scan
      run: |
        cd gauth
        make security-check
        
    - name: Run unit tests
      run: |
        cd gauth
        make test-unit
        
    - name: Run integration tests
      run: |
        cd gauth
        make test-integration
        
    - name: Run E2E tests
      run: |
        cd gauth
        make test-e2e
        
    - name: Generate coverage report
      run: |
        cd gauth
        make test-coverage
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: gauth/coverage/coverage.out
        flags: gauth
        name: gauth-coverage
        
    - name: Build binary
      run: |
        cd gauth
        make build
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: gauth-binary
        path: gauth/bin/
        retention-days: 7

  docker:
    name: Docker Build and Test
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      run: |
        cd gauth
        make docker-build
        
    - name: Run Docker container tests
      run: |
        cd gauth
        make docker-run &
        sleep 10
        curl -f http://localhost:9090/health || exit 1
        
    - name: Clean up Docker
      if: always()
      run: |
        cd gauth
        make docker-compose-down

  database:
    name: Database Migrations
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: gauth
          POSTGRES_DB: gauth_migrate
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        
    - name: Install migration tool with postgres driver
      run: |
        cd gauth
        # Download pre-built binary with all drivers included
        curl -L https://github.com/golang-migrate/migrate/releases/latest/download/migrate.linux-amd64.tar.gz | tar xvz
        chmod +x migrate
        sudo mv migrate /usr/local/bin/
        
    - name: Run migrations up
      run: |
        cd gauth
        # Use migrate with postgres driver explicitly
        migrate -path migrations -database "postgres://gauth:password@localhost:5432/gauth_migrate?sslmode=disable" up
        
    - name: Check migration version
      run: |
        cd gauth
        migrate -path migrations -database "postgres://gauth:password@localhost:5432/gauth_migrate?sslmode=disable" version
        
    - name: Run migrations down
      run: |
        cd gauth
        # Go down one migration step to test rollback functionality
        migrate -path migrations -database "postgres://gauth:password@localhost:5432/gauth_migrate?sslmode=disable" down 1
