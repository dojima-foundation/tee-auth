# Turnkey

## Docs

- [Approve activity](https://docs.turnkey.com/api-reference/activities/approve-activity.md): Approve an activity.
- [Create API keys](https://docs.turnkey.com/api-reference/activities/create-api-keys.md): Add API keys to an existing user.
- [Create authenticators](https://docs.turnkey.com/api-reference/activities/create-authenticators.md): Create authenticators to authenticate requests to Turnkey.
- [Create invitations](https://docs.turnkey.com/api-reference/activities/create-invitations.md): Create invitations to join an existing organization.
- [Create Oauth providers](https://docs.turnkey.com/api-reference/activities/create-oauth-providers.md): Create Oauth providers for a specified user.
- [Create policies](https://docs.turnkey.com/api-reference/activities/create-policies.md): Create new policies.
- [Create policy](https://docs.turnkey.com/api-reference/activities/create-policy.md): Create a new policy.
- [Create private key tag](https://docs.turnkey.com/api-reference/activities/create-private-key-tag.md): Create a private key tag and add it to private keys.
- [Create private keys](https://docs.turnkey.com/api-reference/activities/create-private-keys.md): Create new private keys.
- [Create read only session](https://docs.turnkey.com/api-reference/activities/create-read-only-session.md): Create a read only session for a user (valid for 1 hour).
- [Create read write session](https://docs.turnkey.com/api-reference/activities/create-read-write-session.md): Create a read write session for a user.
- [Create smart contract interface](https://docs.turnkey.com/api-reference/activities/create-smart-contract-interface.md): Create an ABI/IDL in JSON.
- [Create sub-organization](https://docs.turnkey.com/api-reference/activities/create-sub-organization.md): Create a new sub-organization.
- [Create user tag](https://docs.turnkey.com/api-reference/activities/create-user-tag.md): Create a user tag and add it to users.
- [Create users](https://docs.turnkey.com/api-reference/activities/create-users.md): Create users in an existing organization.
- [Create wallet](https://docs.turnkey.com/api-reference/activities/create-wallet.md): Create a wallet and derive addresses.
- [Create wallet accounts](https://docs.turnkey.com/api-reference/activities/create-wallet-accounts.md): Derive additional addresses using an existing wallet.
- [Delete API keys](https://docs.turnkey.com/api-reference/activities/delete-api-keys.md): Remove api keys from a user.
- [Delete authenticators](https://docs.turnkey.com/api-reference/activities/delete-authenticators.md): Remove authenticators from a user.
- [Delete invitation](https://docs.turnkey.com/api-reference/activities/delete-invitation.md): Delete an existing invitation.
- [Delete Oauth providers](https://docs.turnkey.com/api-reference/activities/delete-oauth-providers.md): Remove Oauth providers for a specified user.
- [Delete policy](https://docs.turnkey.com/api-reference/activities/delete-policy.md): Delete an existing policy.
- [Delete private key tags](https://docs.turnkey.com/api-reference/activities/delete-private-key-tags.md): Delete private key tags within an organization.
- [Delete private keys](https://docs.turnkey.com/api-reference/activities/delete-private-keys.md): Delete private keys for an organization.
- [Delete smart contract interface](https://docs.turnkey.com/api-reference/activities/delete-smart-contract-interface.md): Delete a smart contract interface.
- [Delete sub-organization](https://docs.turnkey.com/api-reference/activities/delete-sub-organization.md): Delete a sub-organization.
- [Delete user tags](https://docs.turnkey.com/api-reference/activities/delete-user-tags.md): Delete user tags within an organization.
- [Delete users](https://docs.turnkey.com/api-reference/activities/delete-users.md): Delete users within an organization.
- [Delete wallets](https://docs.turnkey.com/api-reference/activities/delete-wallets.md): Delete wallets for an organization.
- [Export private key](https://docs.turnkey.com/api-reference/activities/export-private-key.md): Export a private key.
- [Export wallet](https://docs.turnkey.com/api-reference/activities/export-wallet.md): Export a wallet.
- [Export wallet account](https://docs.turnkey.com/api-reference/activities/export-wallet-account.md): Export a wallet account.
- [Import private key](https://docs.turnkey.com/api-reference/activities/import-private-key.md): Import a private key.
- [Import wallet](https://docs.turnkey.com/api-reference/activities/import-wallet.md): Import a wallet.
- [Init email recovery](https://docs.turnkey.com/api-reference/activities/init-email-recovery.md): Initialize a new email recovery.
- [Init fiat on ramp](https://docs.turnkey.com/api-reference/activities/init-fiat-on-ramp.md): Initiate a fiat on ramp flow.
- [Init generic OTP](https://docs.turnkey.com/api-reference/activities/init-generic-otp.md): Initiate a generic OTP activity.
- [Init import private key](https://docs.turnkey.com/api-reference/activities/init-import-private-key.md): Initialize a new private key import.
- [Init import wallet](https://docs.turnkey.com/api-reference/activities/init-import-wallet.md): Initialize a new wallet import.
- [Init OTP auth](https://docs.turnkey.com/api-reference/activities/init-otp-auth.md): Initiate an OTP auth activity.
- [Login with a stamp](https://docs.turnkey.com/api-reference/activities/login-with-a-stamp.md): Create a session for a user through stamping client side (API key, wallet client, or passkey client).
- [Login with Oauth](https://docs.turnkey.com/api-reference/activities/login-with-oauth.md): Create an Oauth session for a user.
- [Login with OTP](https://docs.turnkey.com/api-reference/activities/login-with-otp.md): Create an OTP session for a user.
- [Oauth](https://docs.turnkey.com/api-reference/activities/oauth.md): Authenticate a user with an OIDC token (Oauth).
- [OTP auth](https://docs.turnkey.com/api-reference/activities/otp-auth.md): Authenticate a user with an OTP code sent via email or SMS.
- [Activities](https://docs.turnkey.com/api-reference/activities/overview.md): Activities are requests to securely execute a workload in Turnkey.
- [Perform email auth](https://docs.turnkey.com/api-reference/activities/perform-email-auth.md): Authenticate a user via email.
- [Recover a user](https://docs.turnkey.com/api-reference/activities/recover-a-user.md): Complete the process of recovering a user by adding an authenticator.
- [Reject activity](https://docs.turnkey.com/api-reference/activities/reject-activity.md): Reject an activity.
- [Remove organization feature](https://docs.turnkey.com/api-reference/activities/remove-organization-feature.md): Remove an organization feature. This activity must be approved by the current root quorum.
- [Set organization feature](https://docs.turnkey.com/api-reference/activities/set-organization-feature.md): Set an organization feature. This activity must be approved by the current root quorum.
- [Sign raw payload](https://docs.turnkey.com/api-reference/activities/sign-raw-payload.md): Sign a raw payload.
- [Sign raw payloads](https://docs.turnkey.com/api-reference/activities/sign-raw-payloads.md): Sign multiple raw payloads with the same signing parameters.
- [Sign transaction](https://docs.turnkey.com/api-reference/activities/sign-transaction.md): Sign a transaction.
- [Update policy](https://docs.turnkey.com/api-reference/activities/update-policy.md): Update an existing policy.
- [Update private key tag](https://docs.turnkey.com/api-reference/activities/update-private-key-tag.md): Update human-readable name or associated private keys. Note that this activity is atomic: all of the updates will succeed at once, or all of them will fail.
- [Update root quorum](https://docs.turnkey.com/api-reference/activities/update-root-quorum.md): Set the threshold and members of the root quorum. This activity must be approved by the current root quorum.
- [Update user](https://docs.turnkey.com/api-reference/activities/update-user.md): Update a user in an existing organization.
- [Update user tag](https://docs.turnkey.com/api-reference/activities/update-user-tag.md): Update human-readable name or associated users. Note that this activity is atomic: all of the updates will succeed at once, or all of them will fail.
- [Update user's email](https://docs.turnkey.com/api-reference/activities/update-users-email.md): Update a user's email in an existing organization.
- [Update user's name](https://docs.turnkey.com/api-reference/activities/update-users-name.md): Update a user's name in an existing organization.
- [Update user's phone number](https://docs.turnkey.com/api-reference/activities/update-users-phone-number.md): Update a user's phone number in an existing organization.
- [Update wallet](https://docs.turnkey.com/api-reference/activities/update-wallet.md): Update a wallet for an organization.
- [Verify generic OTP](https://docs.turnkey.com/api-reference/activities/verify-generic-otp.md): Verify a generic OTP.
- [API reference](https://docs.turnkey.com/api-reference/overview.md): Review our [API Introduction](/developer-reference/api-overview/intro) to get started.
- [Get activity](https://docs.turnkey.com/api-reference/queries/get-activity.md): Get details about an activity.
- [Get API key](https://docs.turnkey.com/api-reference/queries/get-api-key.md): Get details about an API key.
- [Get API keys](https://docs.turnkey.com/api-reference/queries/get-api-keys.md): Get details about API keys for a user.
- [Get authenticator](https://docs.turnkey.com/api-reference/queries/get-authenticator.md): Get details about an authenticator.
- [Get authenticators](https://docs.turnkey.com/api-reference/queries/get-authenticators.md): Get details about authenticators for a user.
- [Get configs](https://docs.turnkey.com/api-reference/queries/get-configs.md): Get quorum settings and features for an organization.
- [Get Oauth providers](https://docs.turnkey.com/api-reference/queries/get-oauth-providers.md): Get details about Oauth providers for a user.
- [Get policy](https://docs.turnkey.com/api-reference/queries/get-policy.md): Get details about a policy.
- [Get policy evaluations](https://docs.turnkey.com/api-reference/queries/get-policy-evaluations.md): Get the policy evaluations for an activity.
- [Get private key](https://docs.turnkey.com/api-reference/queries/get-private-key.md): Get details about a private key.
- [Get smart contract interface](https://docs.turnkey.com/api-reference/queries/get-smart-contract-interface.md): Get details about a smart contract interface.
- [Get sub-organizations](https://docs.turnkey.com/api-reference/queries/get-sub-organizations.md): Get all suborg IDs associated given a parent org ID and an optional filter.
- [Get user](https://docs.turnkey.com/api-reference/queries/get-user.md): Get details about a user.
- [Get verified sub-organizations](https://docs.turnkey.com/api-reference/queries/get-verified-sub-organizations.md): Get all email or phone verified suborg IDs associated given a parent org ID.
- [Get wallet](https://docs.turnkey.com/api-reference/queries/get-wallet.md): Get details about a wallet.
- [Get wallet account](https://docs.turnkey.com/api-reference/queries/get-wallet-account.md): Get a single wallet account.
- [List activities](https://docs.turnkey.com/api-reference/queries/list-activities.md): List all activities within an organization.
- [List policies](https://docs.turnkey.com/api-reference/queries/list-policies.md): List all policies within an organization.
- [List private key tags](https://docs.turnkey.com/api-reference/queries/list-private-key-tags.md): List all private key tags within an organization.
- [List private keys](https://docs.turnkey.com/api-reference/queries/list-private-keys.md): List all private keys within an organization.
- [List smart contract interfaces](https://docs.turnkey.com/api-reference/queries/list-smart-contract-interfaces.md): List all smart contract interfaces within an organization.
- [List user tags](https://docs.turnkey.com/api-reference/queries/list-user-tags.md): List all user tags within an organization.
- [List users](https://docs.turnkey.com/api-reference/queries/list-users.md): List all users within an organization.
- [List wallets](https://docs.turnkey.com/api-reference/queries/list-wallets.md): List all wallets within an organization.
- [List wallets accounts](https://docs.turnkey.com/api-reference/queries/list-wallets-accounts.md): List all accounts within a wallet.
- [Queries](https://docs.turnkey.com/api-reference/queries/overview.md): Queries are read requests to Turnkey's API. They allow you to retrieve data about your organization and its resources.
- [Who am I?](https://docs.turnkey.com/api-reference/queries/who-am-i.md): Get basic information about your current API or WebAuthN user and their organization. Affords sub-organization look ups via parent organization for WebAuthN or API key users.
- [Backend Authentication](https://docs.turnkey.com/authentication/backend-setup.md): Guide for integrating Turnkey authentication into your backend, covering session JWT creation, validation, and enforcing user access controls.
- [Credentials](https://docs.turnkey.com/authentication/credentials.md): An overview of credentials and how they're used with various authentication methods
- [Email auth & recovery](https://docs.turnkey.com/authentication/email.md): Email Authentication enables users to authenticate and recover their Turnkey accounts using email-based verification. There are two methods of email authentication:
- [Overview](https://docs.turnkey.com/authentication/overview.md): Learn about supported authentication methods for Turnkey, how to add them, and usage details.
- [Discoverable vs. Non-Discoverable](https://docs.turnkey.com/authentication/passkeys/discoverable-vs-non-discoverable.md): Also known as "resident" vs. "non-resident" credentials. From [the spec](https://www.w3.org/TR/webauthn-2/)
- [Integrating Passkeys](https://docs.turnkey.com/authentication/passkeys/integration.md)
- [Introduction to Passkeys](https://docs.turnkey.com/authentication/passkeys/introduction.md): Passkeys are born out of a new standard being pushed by major industry players: Apple and Google.
- [Native Passkeys](https://docs.turnkey.com/authentication/passkeys/native.md): If you're unfamiliar with passkeys broadly, head to  for an overview. TL;DR: passkeys are cryptographic key pairs generated and stored on secure hardware. Typically this is your Mac's or iPhone's , your Android's , or an external security key plugged in via USB.
- [Passkey Options](https://docs.turnkey.com/authentication/passkeys/options.md): Whether you use the raw browser APIs or one of our helpers you'll have flexibility to set your own registration and authentication options. This page provides an overview and some recommendations related to these options.
- [Proxying signed requests](https://docs.turnkey.com/authentication/proxying-signed-requests.md): Turnkey has an open CORS policy for its public API. This means your frontend can choose to POST sign requests straight to `https://api.turnkey.com`. Your frontend can also choose to forward the requests via a backend server (which POSTs the signed request to Turnkey).
- [Sessions](https://docs.turnkey.com/authentication/sessions.md): Turnkey sessions allow a user to take multiple, contiguous actions in a defined period of time.
- [SMS authentication](https://docs.turnkey.com/authentication/sms.md): SMS authentication enables users to authenticate their Turnkey account using their phone number via a 6-9 digit or bech32 alphanumeric one-time password (OTP). When authenticated, users receive an expiring API key stored in memory within an iframe, which functions like a session key to access their wallet.
- [Social logins](https://docs.turnkey.com/authentication/social-logins.md): Social logins provide a familiar and convenient way for users to access applications using their existing accounts from popular platforms like Google, Apple, or Facebook. Under the hood, this functionality is powered by OAuth - a robust authentication protocol that enables secure user verification through OpenID Connect ([OIDC](https://openid.net/specs/openid-connect-core-1_0.html)) tokens. This feature is available exclusively for sub-organization users.
- [Advanced](https://docs.turnkey.com/category/advanced.md): Use Turnkey's low-level http libraries directly
- [Code examples](https://docs.turnkey.com/category/code-examples.md)
- [Code examples](https://docs.turnkey.com/category/code-examples-1.md)
- [Security & Architecture](https://docs.turnkey.com/category/security.md): Learn how Turnkey achieves innovative, cloud scale, no single point of failure security.
- [Web3 libraries](https://docs.turnkey.com/category/web3-libraries.md): Turnkey Web3 libraries
- [API Key Stamper](https://docs.turnkey.com/changelogs/api-key-stamper/readme.md)
- [Cosmjs](https://docs.turnkey.com/changelogs/cosmjs/readme.md)
- [Crypto](https://docs.turnkey.com/changelogs/crypto/readme.md)
- [Dart](https://docs.turnkey.com/changelogs/dart/readme.md)
- [Eip 1193 Provider](https://docs.turnkey.com/changelogs/eip-1193-provider/readme.md)
- [Encoding](https://docs.turnkey.com/changelogs/encoding/readme.md)
- [Ethers](https://docs.turnkey.com/changelogs/ethers/readme.md)
- [Go](https://docs.turnkey.com/changelogs/golang/readme.md)
- [Http](https://docs.turnkey.com/changelogs/http/readme.md)
- [Iframe Stamper](https://docs.turnkey.com/changelogs/iframe-stamper/readme.md)
- [React Native Passkey Stamper](https://docs.turnkey.com/changelogs/react-native-passkey-stamper/readme.md)
- [SDK Browser](https://docs.turnkey.com/changelogs/sdk-browser/readme.md)
- [SDK React Native](https://docs.turnkey.com/changelogs/sdk-react-native/readme.md)
- [SDK React](https://docs.turnkey.com/changelogs/sdk-react/readme.md)
- [SDK Server](https://docs.turnkey.com/changelogs/sdk-server/readme.md)
- [Solana](https://docs.turnkey.com/changelogs/solana/readme.md)
- [Telegram Cloud Storage Stamper](https://docs.turnkey.com/changelogs/telegram-cloud-storage-stamper/readme.md)
- [Viem](https://docs.turnkey.com/changelogs/viem/readme.md)
- [Wallet Stamper](https://docs.turnkey.com/changelogs/wallet-stamper/readme.md)
- [Webauthn Stamper](https://docs.turnkey.com/changelogs/webauthn-stamper/readme.md)
- [Organizations](https://docs.turnkey.com/concepts/organizations.md): An organization is a logical grouping of resources (e.g. users, policies, wallets). These resources can only be accessed by authorized and permissioned users within the organization. Resources are not shared between organizations.
- [Overview](https://docs.turnkey.com/concepts/overview.md): Turnkey is flexible, scalable, and secure wallet infrastructure that can be used for transaction automation (e.g., payments flows, smart contract management), or non-custodial embedded wallets. Turnkey offers low-level primitives that can be combined to accomplish a variety of goals.
- [Delegated Access](https://docs.turnkey.com/concepts/policies/delegated-access.md): With Turnkey you can create multi-user accounts with flexible co-ownership controls. This primitive enables you to establish delegated access to a user’s wallet, reducing or removing the need for them to manually approve each action. You can provide a smoother user experience while ensuring that end-users maintain full control over their wallets.
- [Policy examples](https://docs.turnkey.com/concepts/policies/examples.md)
- [Policy language](https://docs.turnkey.com/concepts/policies/language.md): This page provides an overview of how to author policies using our policy language. To begin, we'll need to get familiar with the language's grammar, keywords, and types.
- [Policy overview](https://docs.turnkey.com/concepts/policies/overview.md): Our policy engine is the foundation for flexible controls and permissions within your organization. This page provides an overview of how to author policies.
- [Policy quickstart](https://docs.turnkey.com/concepts/policies/quickstart.md): This guide will help you add an additional user to your Turnkey organization and set permissions for that user through Policies. Specifically, we will create an API-only user with permissions to sign transactions to an allowlisted address.
- [Smart contract interfaces — ABIs & IDLs](https://docs.turnkey.com/concepts/policies/smart-contract-interfaces.md): This page provides an overview of the Policy Engine's support for parsing calls to Smart Contracts on Ethereum and Programs on Solana by uploading the JSON respresentation of the respective ABI (Ethereum) or IDL (Solana)
- [Resource limits](https://docs.turnkey.com/concepts/resource-limits.md): Learn more about how to structure your implementation to avoid resource limits.
- [Sub-organizations](https://docs.turnkey.com/concepts/sub-organizations.md): Using Turnkey's flexible infrastructure, you can programmatically create and manage sub-organizations for your end-users. Sub-organizations aren't subject to size limits: you can create as many sub-organizations as needed. The parent organization has **read-only** visibility into all of its sub-organizations, and activities performed in sub-organizations roll up to the parent for billing purposes.
- [Introduction to users](https://docs.turnkey.com/concepts/users/introduction.md): Turnkey users are resources within organizations or sub-organizations that can submit activities to Turnkey via a valid credential (e.g., API key, passkey).
- [Wallets](https://docs.turnkey.com/concepts/wallets.md): A [hierarchical deterministic (HD) wallet](https://learnmeabitcoin.com/technical/hd-wallets) is a collection of cryptographic private/public key pairs that share a common seed. A wallet is used to generate accounts.
- [Use Turnkey wallets with Morpho](https://docs.turnkey.com/cookbook/morpho.md)
- [Errors](https://docs.turnkey.com/developer-reference/api-overview/errors.md): An error returned by the Turnkey API might look something like this:
- [Introduction](https://docs.turnkey.com/developer-reference/api-overview/intro.md): Turnkey's API is a remote procedure call (RPC) API.
- [Queries](https://docs.turnkey.com/developer-reference/api-overview/queries.md): Queries are read requests to Turnkey's API. Query URL paths are prefixed with `/public/v1/query`. Queries are not subject to enforcement of the policy engine. All users within an organization can read any data within the organization.
- [Stamps](https://docs.turnkey.com/developer-reference/api-overview/stamps.md): Every request made to Turnkey must include a signature over the POST body attached as a HTTP header. Our secure enclave applications use this signature to verify the integrity and authenticity of the request.
- [Submissions](https://docs.turnkey.com/developer-reference/api-overview/submissions.md): Submissions are requests to securely execute a workload. Submission URL paths are prefixed with `/public/v1/submit`. Submissions requests, if valid, produce an `Activity`.
- [Using LLMs](https://docs.turnkey.com/developer-reference/using-llms.md)
- [Activity Webhooks](https://docs.turnkey.com/developer-reference/webhooks.md): Webhooks provide a powerful mechanism to receive real-time notifications about activity requests in your Turnkey organization. Additionally, you'll be able to receive all activity requests for both the parent organization and all its child organizations. This functionality can be enabled via the organization feature capabilities of our platform, as detailed in the section on [organization features](/concepts/organizations#features).
- [Add an Additional Passkey](https://docs.turnkey.com/embedded-wallets/code-examples/add-credential.md): This guide demonstrates how to add a new credential (specifically, a passkey) to an existing wallet using the Turnkey SDK.
- [Authenticate a User with Email](https://docs.turnkey.com/embedded-wallets/code-examples/authenticate-user-email.md)
- [Authenticate a User with a Passkey Credential](https://docs.turnkey.com/embedded-wallets/code-examples/authenticate-user-passkey.md)
- [Create a User Passkey Session](https://docs.turnkey.com/embedded-wallets/code-examples/create-passkey-session.md): A passkey session is an expiring session enabled by an initial passkey authentication. You could think of this as a "lightning mode" of sorts: creating a passkey session allows users to authenticate subsequent requests touch-free. Under the hood, this is powered by our [indexedDbStamper](/sdks/advanced/indexed-db-stamper). These sessions are enabled by creating a short-lived embedded API key in the browser, stored in localStorage, and cryptographically scoped to a public key generated by IndexedDB.
- [Create a Sub-Org with a Passkey User](https://docs.turnkey.com/embedded-wallets/code-examples/create-sub-org-passkey.md): In this guide, we'll walk through the process of creating a new end user with a passkey.
- [Create a User with Email Only](https://docs.turnkey.com/embedded-wallets/code-examples/create-user-email.md): This example demonstrates how to create a sub organization using just an end-user's email: passkeys not required! Note that this flow does not require emails to be verified.
- [Recover a User with Email](https://docs.turnkey.com/embedded-wallets/code-examples/email-recovery.md): In this guide, we'll walk through the process of recovering a user using their email.
- [Export Wallet or Private Key](https://docs.turnkey.com/embedded-wallets/code-examples/export.md): This is a guide to exporting your wallet or private key from Turnkey. For more information about the security of this flow, check out [Enclave secure channels](/security/enclave-secure-channels).
- [Import Wallet or Private Key](https://docs.turnkey.com/embedded-wallets/code-examples/import.md): This is a guide to importing your wallet or private key into Turnkey. For more information about the security of this flow, check out [Enclave secure channels](/security/enclave-secure-channels).
- [Signing Transactions](https://docs.turnkey.com/embedded-wallets/code-examples/signing-transactions.md): This is a guide to signing transactions in the browser context. While these snippets leverage Ethers, it can be swapped out for other signers in the Viem or Solana contexts. See [here](https://github.com/tkhq/sdk/tree/main/examples/with-eth-passkeys-galore) for an example with both Ethers and Viem in the passkey + browser context, and [here](https://github.com/tkhq/sdk/tree/main/examples/with-solana-passkeys) for a similar example with Solana.
- [Wallet Authentication](https://docs.turnkey.com/embedded-wallets/code-examples/wallet-auth.md): In this guide, we'll explore how to leverage the `WalletClient` in the Turnkey SDK to authenticate requests to Turnkey's API using either Solana or Ethereum wallets.
- [Features](https://docs.turnkey.com/embedded-wallets/features/overview.md)
- [Overview](https://docs.turnkey.com/embedded-wallets/overview.md)
- [FAQ](https://docs.turnkey.com/faq.md)
- [Embedded wallets quickstart](https://docs.turnkey.com/getting-started/embedded-wallet-quickstart.md): Turnkey's embedded wallets enable you to integrate secure, custom wallet experiences directly into your product. With features like advanced security, seamless authentication, and flexible UX options, you can focus on building great products while we handle the complexities of private key management.
- [Examples](https://docs.turnkey.com/getting-started/examples.md): Turnkey infrastructure is flexible by default. We intentionally prioritize low-level primitives in our product to avoid creating blockers for developers building new kinds of applications on Turnkey.
- [Account setup](https://docs.turnkey.com/getting-started/quickstart.md): Before diving into the code, let's set up your organization and conjure up an API keypair to unlock the full potential of Turnkey!
- [Transaction automation quickstart](https://docs.turnkey.com/getting-started/signing-automation-quickstart.md): Turnkey's transaction automation enables you to build secure, programmatic signing workflows directly into your applications. With features like customizable policies, multi-party approvals, and support for any blockchain, you can confidently automate complex signing operations while maintaining enterprise-grade security.
- [Overview](https://docs.turnkey.com/home.md): Welcome to Turnkey!
- [Aptos support on Turnkey](https://docs.turnkey.com/networks/aptos.md)
- [Bitcoin support on Turnkey](https://docs.turnkey.com/networks/bitcoin.md)
- [Cosmos support on Turnkey](https://docs.turnkey.com/networks/cosmos.md)
- [Ethereum (EVM) support on Turnkey](https://docs.turnkey.com/networks/ethereum.md)
- [Movement](https://docs.turnkey.com/networks/movement.md): Movement support on Turnkey
- [Others](https://docs.turnkey.com/networks/others.md)
- [Overview](https://docs.turnkey.com/networks/overview.md): Turnkey operates at the **cryptographic curve** level rather than specific assets. As a result Turnkey is asset agnostic and can be used with any type of asset as long as we support the underlying curve.
- [Sei support on Turnkey](https://docs.turnkey.com/networks/sei.md)
- [Solana (SVM) support on Turnkey](https://docs.turnkey.com/networks/solana.md)
- [Stacks](https://docs.turnkey.com/networks/stacks.md)
- [Sui support on Turnkey](https://docs.turnkey.com/networks/sui.md)
- [Tron support on Turnkey](https://docs.turnkey.com/networks/tron.md)
- [Embedded wallets implementation guide](https://docs.turnkey.com/production-checklist/embedded-wallet.md): Designing your embedded wallet implementation
- [Production Checklist](https://docs.turnkey.com/production-checklist/production-checklist.md): This checklist contains recommendations and steps specifically for deploying an Embedded Wallet production environment.
- [Transaction Automation Implementation Guide](https://docs.turnkey.com/production-checklist/transaction-automation.md): Implementing transaction automation with Turnkey
- [Fiat Onramp](https://docs.turnkey.com/products/embedded-wallets/features/fiat-on-ramp.md): Turnkey’s Fiat Onramp lets your end users convert traditional currency (USD, EUR, etc.) into crypto assets (ETH, USDC, BTC, etc.) directly within your application.
- [Multichain support](https://docs.turnkey.com/products/embedded-wallets/features/multi-chain-support.md): Overview of our multichain network support.
- [null](https://docs.turnkey.com/products/transaction-automation/features/export-wallets.md)
- [null](https://docs.turnkey.com/products/transaction-automation/features/import-wallets.md)
- [Multichain support](https://docs.turnkey.com/products/transaction-automation/features/multi-chain-support.md): Overview of our multichain network support.
- [QuorumOS](https://docs.turnkey.com/products/transaction-automation/features/security/quorum-os.md)
- [Remote Attestation](https://docs.turnkey.com/products/transaction-automation/features/security/remote-attestation.md)
- [Secure Hardware](https://docs.turnkey.com/products/transaction-automation/features/security/secure-hardware.md)
- [Account Abstraction Wallets](https://docs.turnkey.com/reference/aa-wallets.md): Turnkey offers flexible infrastructure to create and manage keys. These keys can be used as a signer inside of an [Account Abstraction wallet](https://www.erc4337.io/), and we've partnered with [Alchemy](https://www.alchemy.com/) and [ZeroDev](https://zerodev.app/) to integrate in a few lines of code.
- [Embedded Wallet Kit (EWK)](https://docs.turnkey.com/reference/embedded-wallet-kit.md): Turnkey offers a suite of react components to create embedded wallets without having to setup a backend by using Next.js [server actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations) and associated directives. Each component uses the **indexedDbClient** from [@turnkey/sdk-react](https://www.npmjs.com/package/@turnkey/sdk-react).
- [How to Integrate Gasless Transactions On Solana With Turnkey](https://docs.turnkey.com/reference/solana-gasless-transactions.md)
- [How To Integrate Gasless Transactions On Tron With Turnkey](https://docs.turnkey.com/reference/tron-gasless-transactions.md)
- [ApiKeyStamper](https://docs.turnkey.com/sdks/advanced/api-key-stamper.md)
- [IframeStamper](https://docs.turnkey.com/sdks/advanced/iframe-stamper.md)
- [TurnkeyClient](https://docs.turnkey.com/sdks/advanced/turnkey-client.md)
- [WalletStamper](https://docs.turnkey.com/sdks/advanced/wallet-stamper.md)
- [WebauthnStamper](https://docs.turnkey.com/sdks/advanced/webauthn-stamper.md)
- [Using the CLI](https://docs.turnkey.com/sdks/cli.md): This quickstart will guide you through Turnkey’s onboarding, adding an API key, creating a wallet, and signing your first Ethereum transaction.
- [Flutter](https://docs.turnkey.com/sdks/flutter.md): This documentation contains guides for using the Flutter SDK.
- [Golang](https://docs.turnkey.com/sdks/golang.md): Turnkey offers native tooling for interacting with the API using Golang. See [https://github.com/tkhq/go-sdk](https://github.com/tkhq/go-sdk) for more details.
- [SDK Reference](https://docs.turnkey.com/sdks/introduction.md): Turnkey provides a variety of client and server SDKs which simplify interacting with Turnkey's API. The SDKs offer methods, utilities, and helper functions to quickly implement features and perform common workflows.
- [JavaScript Browser](https://docs.turnkey.com/sdks/javascript-browser.md)
- [JavaScript Server](https://docs.turnkey.com/sdks/javascript-server.md): The [`@turnkey/sdk-server`](https://www.npmjs.com/package/@turnkey/sdk-server) package exposes functionality that lets developers build server-side functionality for applications that interact with the Turnkey API.
- [Migration Path](https://docs.turnkey.com/sdks/migration-path.md): This guide aims to cover the process for migrating from lower-level Turnkey SDK (i.e. `@turnkey/{ http, api-key-stamper, webauthn-stamper, iframe-stamper }`) libraries, to our more recent abstractions: `@turnkey/{ sdk-browser, sdk-server, sdk-react }`
- [Python](https://docs.turnkey.com/sdks/python.md): Turnkey offers support for interacting with the API using Python. See [https://github.com/tkhq/python-sdk](https://github.com/tkhq/python-sdk) for more details.
- [React](https://docs.turnkey.com/sdks/react.md)
- [React Native](https://docs.turnkey.com/sdks/react-native.md): This documentation contains guides for using Turnkey's React Native compatible [JavaScript packages](https://github.com/tkhq/sdk/tree/main/packages).
- [Ruby](https://docs.turnkey.com/sdks/ruby.md): Turnkey offers native tooling for interacting with the API using Ruby. See [https://github.com/tkhq/ruby-sdk](https://github.com/tkhq/ruby-sdk) for more details.
- [Rust](https://docs.turnkey.com/sdks/rust.md): Turnkey offers native tooling for interacting with the API using Rust. See [https://github.com/tkhq/rust-sdk](https://github.com/tkhq/rust-sdk) for more details.
- [Turnkey Swift SDK](https://docs.turnkey.com/sdks/swift.md): This documentation contains guides for using the [Turnkey Swift SDK](https://github.com/tkhq/swift-sdk).
- [Proxy Middleware](https://docs.turnkey.com/sdks/swift/proxy-middleware.md): The [`ProxyMiddleware`](https://github.com/tkhq/swift-sdk/blob/bd8993b4b6b35c44d4a917b06dd44490961c4f28/Sources/Middleware/ProxyMiddleware.swift) is integrated into the `TurnkeyClient` through its initializer that accepts a proxy server URL.
- [Introduction](https://docs.turnkey.com/sdks/swift/register-passkey.md): This guide explains how to use the `PasskeyManager` class to register a new passkey within your iOS application. We'll cover the necessary configurations and provide code examples with detailed explanations.
- [CosmJS](https://docs.turnkey.com/sdks/web3/cosmjs.md): [`@turnkey/cosmjs`](https://www.npmjs.com/package/@turnkey/cosmjs) exports a `TurnkeyDirectWallet` that serves as a drop-in replacement for a CosmJS direct wallet. It includes support for `signDirect`. See full implementation [here](https://github.com/tkhq/sdk/tree/main/packages/cosmjs) for more details and examples.
- [EIP 1193](https://docs.turnkey.com/sdks/web3/eip-1193.md): [`@turnkey/eip-1193-provider`](https://www.npmjs.com/package/@turnkey/eip-1193-provider) is a Turnkey-compatible Ethereum provider that conforms to the [EIP-1193](https://eips.ethereum.org/EIPS/eip-1193) standard. It's built to seamlessly integrate with a broad spectrum of EVM-compatible chains, offering capabilities like account management, transaction signing, and blockchain interaction.
- [Ethers](https://docs.turnkey.com/sdks/web3/ethers.md): [`@turnkey/ethers`](https://www.npmjs.com/package/@turnkey/ethers) exports a `TurnkeySigner` that serves as a drop-in replacement for an Ethers signer.
- [Solana](https://docs.turnkey.com/sdks/web3/solana.md): We have released a package that you can use to sign transactions and messages: [`@turnkey/solana`](https://www.npmjs.com/package/@turnkey/solana). See [here](https://github.com/tkhq/sdk/tree/main/examples/with-solana) for an example.
- [Viem](https://docs.turnkey.com/sdks/web3/viem.md): [`@turnkey/viem`](https://www.npmjs.com/package/@turnkey/viem) provides a Turnkey [Custom Account](https://viem.sh/docs/accounts/custom.html#custom-account) (signer) which implements the signing APIs expected by Viem clients.
- [Disaster Recovery](https://docs.turnkey.com/security/disaster-recovery.md)
- [Enclave to end-user secure channels](https://docs.turnkey.com/security/enclave-secure-channels.md)
- [Non-Custodial Key Management](https://docs.turnkey.com/security/non-custodial-key-mgmt.md)
- [Our Approach](https://docs.turnkey.com/security/our-approach.md)
- [Quorum Deployments](https://docs.turnkey.com/security/quorum-deployments.md)
- [Reporting a Vulnerability](https://docs.turnkey.com/security/reporting-a-vulnerability.md)
- [Secure Enclaves](https://docs.turnkey.com/security/secure-enclaves.md)
- [Turnkey Shared Responsibility Model](https://docs.turnkey.com/security/shared-responsibility-model.md)
- [Verifiable Data](https://docs.turnkey.com/security/verifiable-data.md)
- [The Turnkey Whitepaper](https://docs.turnkey.com/security/whitepaper.md)
- [Co-signing Transactions](https://docs.turnkey.com/signing-automation/co-signing-transactions.md): Learn how to set up and use co-signing (multi-sig) wallets with Turnkey.
- [Signing Transactions](https://docs.turnkey.com/signing-automation/code-examples/signing-transactions.md): This is a guide to signing transactions in a server context. While these snippets leverage Ethers, it can be swapped out for other signers in the Viem or Solana contexts. An example for Ethers can be found , and  for Viem in the server context. A similar example with Solana can be found .
- [Overview](https://docs.turnkey.com/signing-automation/overview.md)
- [Claim links](https://docs.turnkey.com/wallets/claim-links.md): Enable your users to send crypto to people who haven’t signed up yet through secure, non-custodial magic claim links. This feature creates pre-funded wallets that new users can claim by simply clicking a URL.
- [Export wallets and keys](https://docs.turnkey.com/wallets/export-wallets.md): Turnkey's export functionality allows your end users to backup or transfer a [Wallet](/concepts/wallets) by securely viewing the wallet's [mnemonic phrase](https://learnmeabitcoin.com/technical/mnemonic), a [Wallet Account](/concepts/wallets#accounts) or a raw [Private Key](/concepts/wallets#private-keys). We engineered this feature to ensure that the user can export their mnemonic or private key without exposing it to Turnkey or your application.
- [Fiat Onramp](https://docs.turnkey.com/wallets/fiat-on-ramp.md): Turnkey’s Fiat Onramp lets your end users convert traditional currency (USD, EUR, etc.) into crypto assets (ETH, USDC, BTC, etc.) directly within your application.
- [Import wallets and keys](https://docs.turnkey.com/wallets/import-wallets.md): Turnkey's import functionality allows your end users to securely transfer a [Wallet](/concepts/wallets) or a [Private Key](/concepts/wallets#private-keys) onto the Turnkey platform via CLI or an embedded iframe. We engineered this feature to ensure that the user can import their mnemonic or private key into a Turnkey secure enclave without exposing it to Turnkey or your application.
- [Pre-generated wallets](https://docs.turnkey.com/wallets/pregenerated-wallets.md): Turnkey allows you to pre-generate wallets for your user before they authenticate. This is helpful if you already know the users email or phone number, and want to create a deposit address for them or airdrop a reward before they authenticate to Turnkey.
- [Integrating an embedded wallet with Wagmi](https://docs.turnkey.com/wallets/wagmi.md)


## Optional

- [Support](https://join.slack.com/t/clubturnkey/shared_invite/zt-31v4yhgw6-PwBzyNsWCCBTk2xft3EoHQ)
- [Blog](https://www.turnkey.com/blog)
- [Contact us](https://www.turnkey.com/contact-us)
